# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-05 07:44
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Название/номер')),
                ('price', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Цена за шаг времени')),
                ('location', models.CharField(blank=True, max_length=124, null=True, verbose_name='Расположение')),
                ('t_steps_per_order', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Число шагов времени на заказ')),
                ('extra_info', models.CharField(blank=True, max_length=124, null=True, verbose_name='Доп. информация')),
                ('is_active', models.BooleanField(default=True, verbose_name='Работает')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Введено в строй')),
            ],
            options={
                'verbose_name': 'предмет сервиса',
                'verbose_name_plural': 'предметы сервиса',
                'ordering': ['location', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(default=datetime.date.today, verbose_name='Дата')),
                ('time_start', models.TimeField(verbose_name='Время начала')),
                ('time_end', models.TimeField(verbose_name='Время конца')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='service.Item', verbose_name='Предмет сервиса')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=16, unique=True, verbose_name='Фрагмент URL на английском (навсегда)')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Название')),
                ('description', models.CharField(max_length=124, verbose_name='Краткое описание')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='Инструкция и подробное описание')),
                ('image', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'svg'])], verbose_name='Картинка')),
                ('time_step', models.TimeField(verbose_name='Минимальное время использования (шаг времени)')),
                ('max_time_steps', models.PositiveSmallIntegerField(default=1, verbose_name='Максимальное число шагов времени непрерывного использования')),
                ('default_price', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='Цена по-умолчанию за шаг времени')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Последнее редактирование этих данных')),
                ('is_active', models.BooleanField(default=True, verbose_name='Работает')),
                ('default_works_from', models.TimeField(default=datetime.time(0, 0), verbose_name='Начало рабочего времени по-умолчанию')),
                ('default_works_to', models.TimeField(default=datetime.time(0, 0), verbose_name='Конец рабочего времени по-умолчанию')),
                ('days_to_show', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Дней на заказ')),
                ('time_after_now', models.TimeField(default=datetime.time(0, 20), verbose_name='Времени на запись после начала')),
                ('responsible_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='ответственное лицо')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='WorkingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.PositiveSmallIntegerField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье'), (8, 'Ежедневно')], default=8, verbose_name='Рабочее время')),
                ('works_from', models.TimeField(default=datetime.time(0, 0), verbose_name='Начало рабочего времени')),
                ('works_to', models.TimeField(default=datetime.time(23, 59, 59), verbose_name='Конец рабочего времени')),
                ('weekend', models.BooleanField(default=False, verbose_name='Выходной')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Описание')),
                ('object_id', models.PositiveIntegerField(verbose_name='Id назначения')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Тип назначения')),
            ],
            options={
                'verbose_name': 'Время работы',
                'verbose_name_plural': 'Расписания',
                'ordering': ['object_id', 'weekday', 'works_from', 'works_to'],
            },
        ),
        migrations.CreateModel(
            name='WorkingTimeException',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField(verbose_name='День начала')),
                ('date_end', models.DateField(verbose_name='День окончания')),
                ('works_from', models.TimeField(default=datetime.time(0, 0), verbose_name='Начало рабочего времени')),
                ('works_to', models.TimeField(default=datetime.time(0, 0), verbose_name='Конец рабочего времени')),
                ('weekend', models.BooleanField(default=False, verbose_name='Выходной')),
                ('is_annual', models.BooleanField(default=False, verbose_name='Ежегодно')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Описание')),
                ('object_id', models.PositiveIntegerField(verbose_name='Id назначения')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Тип назначения')),
            ],
            options={
                'verbose_name': 'Дата исключения',
                'verbose_name_plural': 'Даты исключений',
                'ordering': ['object_id', 'is_annual', 'date_start', 'date_end', 'works_from'],
            },
        ),
        migrations.AddField(
            model_name='item',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='service.Service', verbose_name='Сервис'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together=set([('date_start', 'time_start'), ('date_start', 'time_end')]),
        ),
    ]
