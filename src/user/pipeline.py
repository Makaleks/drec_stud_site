from django.contrib.auth import login, get_user_model
from .exceptions import LoginDeniedException

#import logging
#logging.basicConfig(filename='social_auth.log', level=logging.INFO)
#log = logging.getLogger(__name__)
#from django.utils.encoding import force_text

# uid       - user id in the network
# response  - server response with user details (depends on provider)
# details   - some sum-ups from response, generated by a backend
def load_user (uid, responce = {}, **kwargs):
    User = get_user_model()
    user = User.objects.get(account_id = uid)
    if user is None:
        raise LoginDeniedException('This user is unregistered.')
    return {'user': user}

# crutch?
#def force_login (user, strategy, **kwargs):
#    request = strategy.request
#    login(request, user)

#def log_details (responce = {}, details = {}, **kwargs):
#    log.info(force_text(str(dir(details))))
#    log.info(force_text(str(dir(responce))))
